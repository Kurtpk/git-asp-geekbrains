@model WebStore.DomainNew.Models.Product.CatalogViewModel
@using WebStore.DomainNew.Models.BreadCrumb

@{
    ViewBag.Title = "Shop";
    Layout = "~/Views/Shared/_LayoutWithSideBar.cshtml";
}

@section top{
    <section id="advertisement">
        <div class="container">
            <img src="~/template/images/shop/topBanner.jpg" alt="" />
        </div>
    </section>
}

@section breadcrumb{
    @{
        // Получаем тип для бренда или секции
        var type = Context.Request.Query.ContainsKey("sectionId") ?
            BreadCrumbType.Section : Context.Request.Query.ContainsKey("brandId") ?
                BreadCrumbType.Brand : BreadCrumbType.None;

        // Устанавливаем дефолтное значение источника
        var fromType = BreadCrumbType.Section;

        // Если это метод деталей товара
        if ((string)ViewContext.RouteData.Values["action"] == "ProductDetails")
        {
            // Устанавливаем тип товар
            type = BreadCrumbType.Item;
        }

        var id = 0;

        switch (type)
        {
            case BreadCrumbType.None:
                break;
            case BreadCrumbType.Section:
                id = int.Parse(Context.Request.Query["sectionId"].ToString());
                break;
            case BreadCrumbType.Brand:
                id = int.Parse(Context.Request.Query["brandId"].ToString());
                break;
            case BreadCrumbType.Item:
                // Если есть ключ того, что пришли с бренда, ставим источник – бренд
                if (Context.Request.Query.ContainsKey("fromBrand"))
                {
                    fromType = BreadCrumbType.Brand;
                }
                id = int.Parse(ViewContext.RouteData.Values["id"].ToString());
                break;
            default:
                throw new ArgumentOutOfRangeException();
        }
    }

    @(await Component.InvokeAsync("BreadCrumbs", new { type, id, fromType }))
}

@*@await Html.PartialAsync("Partial/_FeaturesShop")*@

@await Html.PartialAsync("Partial/_ProductItems", Model.Products)
<paging page-model="Model.PageViewModel" page-action="Shop" page-url-sectionId="@Model.SectionId" page-url-brandId="@Model.BrandId"></paging>
